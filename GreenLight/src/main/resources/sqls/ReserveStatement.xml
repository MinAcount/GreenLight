<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.green.light.model.mapper.ReserveDaoImpl">
	<resultMap type="com.green.light.vo.CheckListVo" id="CheckListMapVo">
		<result property="lseq" column="LSEQ" />
		<result property="reserveno" column="RESERVENO" />
		<result property="conf_id" column="CONF_ID" />
		<collection property="reservationVo"
			resultMap="ReservationMapVo" />
		<collection property="conferenceVo"
			resultMap="ConferenceMapVo" />
	</resultMap>
	<resultMap type="com.green.light.vo.ReservationVo" id="ReservationMapVo">
		<result property="reserveno" column="RESERVENO" />
		<result property="applicant" column="APPLICANT" />
		<result property="phone" column="PHONE" />
		<result property="reserve_date" column="RESERVE_DATE" />
		<result property="meetingtitle" column="MEETINGTITLE" />
	</resultMap>
	<resultMap type="com.green.light.vo.ConferenceVo" id="ConferenceMapVo">
		<result property="conf_id" column="conf_id" />
		<result property="cname" column="cname" />
		<result property="capacity" column="capacity" />
		<result property="ho" column="ho" />
		<result property="roominfo" column="roominfo" />
	</resultMap>
	<!-- 전체 예약 조회 -->
	<select id="getAllReserve" resultMap="CheckListMapVo">
		SELECT LSEQ , RESERVENO ,
		CONF_ID ,
		CNAME , CAPACITY, AVAILABILITY , HO ,
		APPLICANT , PHONE ,
		RESERVE_DATE , MEETINGTITLE
		FROM CONFERENCE c
		JOIN CHECKLIST l USING
		(CONF_ID)
		JOIN RESERVATION r USING (RESERVENO)
		ORDER BY LSEQ ASC
	</select>
	<!-- 선택 회의실 예약 조회 -->
	<select id="confListReserve" parameterType="java.lang.String" resultMap="CheckListMapVo">
		SELECT LSEQ , RESERVENO , CONF_ID ,
		CNAME , CAPACITY,
		AVAILABILITY , HO ,
		APPLICANT , PHONE , RESERVE_DATE , MEETINGTITLE
		FROM CONFERENCE c
		JOIN CHECKLIST l USING (CONF_ID)
		JOIN RESERVATION r
		USING (RESERVENO)
		WHERE AVAILABILITY = 'Y'
		AND CONF_ID = #{conf_id}
		ORDER BY RESERVE_DATE ASC
	</select>

	<!-- 선택 날짜 예약 조회 -->
	<select id="dateListReserve" parameterType="java.lang.String" resultMap="CheckListMapVo">
		SELECT LSEQ , RESERVENO , CONF_ID , TO_CHAR(RESERVE_DATE,
		'HH24') "TIME",
		CNAME , CAPACITY, AVAILABILITY , HO ,
		APPLICANT , PHONE
		, RESERVE_DATE , MEETINGTITLE
		FROM CONFERENCE c
		JOIN CHECKLIST l USING
		(CONF_ID)
		JOIN RESERVATION r USING (RESERVENO)
		WHERE AVAILABILITY = 'Y'
		AND TRUNC(RESERVE_DATE) = TO_DATE(#{click_date}, 'YYYY-MM-DD')
		ORDER BY
		CNAME ASC
	</select>
	<!-- 선택 회의실 및 선택 날짜의예약 가능 시간 조회 -->
	<select id="timeListReserve" parameterType="java.util.Map" resultMap="CheckListMapVo">
    <![CDATA[
        WITH TimeSlots AS (
            SELECT LPAD(LEVEL + 8, 2, '00') AS TimeSlot
            FROM DUAL
            CONNECT BY LEVEL <= 10
        ), Reservations AS (
            SELECT TO_CHAR(RESERVE_DATE, 'HH24') AS TT, CONF_ID
            FROM CHECKLIST l
            JOIN RESERVATION r USING(RESERVENO)
            WHERE CONF_ID = #{conf_id}
            AND TRUNC(RESERVE_DATE) = TO_DATE(#{reserve_date}, 'YYYY-MM-DD')
        )
        SELECT COALESCE(r.CONF_ID, #{conf_id}) AS CONF_ID, t.TimeSlot,
            CASE 
                WHEN r.TT IS NULL THEN '예약가능'
                WHEN t.TimeSlot = r.TT OR LPAD(TO_NUMBER(t.TimeSlot) - 1, 2, '00') = r.TT THEN '사용중'
                ELSE '점검중'
            END AS STATUS
        FROM TimeSlots t
        LEFT JOIN Reservations r ON t.TimeSlot = r.TT OR LPAD(TO_NUMBER(t.TimeSlot) - 1, 2, '00') = r.TT
        ORDER BY t.TimeSlot ASC
    ]]>
	</select>
	<sql id="orderByDesc">
		<choose>
			<when test="sorting == 'reserveno'">RESERVENO</when>
			<when test="sorting == 'cname'">CNAME</when>
			<when test="sorting == 'capacity'">CAPACITY</when>
			<otherwise>RESERVENO</otherwise>
		</choose>
		DESC
	</sql>
	<!-- 나의 예약 조회 -->
	<select id="getMyReserve" parameterType="java.lang.String" resultMap="CheckListMapVo">
		SELECT LSEQ , RESERVENO , CONF_ID ,
		CNAME , CAPACITY, AVAILABILITY , HO
		,
		APPLICANT , PHONE , RESERVE_DATE , MEETINGTITLE
		FROM CONFERENCE c
		JOIN
		CHECKLIST l USING (CONF_ID)
		JOIN RESERVATION r USING (RESERVENO)
		WHERE
		APPLICANT = #{applicant}
		ORDER BY
		<include refid="orderByDesc" />
	</select>
	<!-- 예약 정보 상세 조회 -->
	<select id="getOneReserve" parameterType="java.lang.String" resultMap="CheckListMapVo">
		SELECT LSEQ , RESERVENO , CONF_ID ,
		CNAME , CAPACITY,
		AVAILABILITY , HO ,
		APPLICANT , PHONE , RESERVE_DATE , MEETINGTITLE
		FROM CONFERENCE c
		JOIN CHECKLIST l USING (CONF_ID)
		JOIN RESERVATION r
		USING (RESERVENO)
		WHERE RESERVENO = #{reserveno}
	</select>
	<!-- 예약 -->
	<insert id="insertReserve" parameterType="java.util.Map" statementType="CALLABLE">
		CALL GD.PRO_RESERVATION (
		#{v_count, mode=OUT, jdbcType=INTEGER},
		#{v_reserveno, mode=OUT, jdbcType=VARCHAR},
		#{applicant, mode=IN, jdbcType=VARCHAR},
		#{phone, mode=IN, jdbcType=VARCHAR},
		#{reserve_date, mode=IN, jdbcType=DATE},
		#{meetingtitle, mode=IN, jdbcType=VARCHAR},
		#{conf_id, mode=IN, jdbcType=VARCHAR}
		)
	</insert>

	<!-- 예약 수정 -->
	<update id="updateReserve" parameterType="ReservationVo">
		UPDATE RESERVATION SET
		PHONE=#{phone}, MEETINGTITLE=#{meetingtitle}
		WHERE
		RESERVENO=#{reserveno}
	</update>
	<!-- 예약 취소 -->
	<delete id="deleteReserve" parameterType="ReservationVo">
    	CALL GD.PRO_DELETE (
		#{reserveno, mode=IN, jdbcType=VARCHAR},
		#{v_success, mode=OUT, jdbcType=INTEGER}
		)
	</delete>
</mapper>