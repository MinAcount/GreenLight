<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.green.light.model.mapper.DepartmentDaoImpl">

<resultMap type="com.green.light.vo.DepartmentVo" id="DepartmentVo">
	<result property="deptno" column="DEPTNO"/>
	<result property="dname" column="DNAME"/>
	<result property="dept_mgr" column="DEPT_MGR"/>
	<result property="headno" column="HEADNO"/>
	<result property="delflag" column="DELFLAG"/>
	<collection property="comVo" resultMap="CommonVo"/>
	<collection property="empVo" resultMap="EmployeeVo"/>
</resultMap>
<resultMap type="com.green.light.vo.CommonVo" id="CommonVo">
	<result property="type" column="TYPE"/>
	<result property="code" column="CODE"/>
	<result property="code_name" column="CODE_NAME"/>
</resultMap>
<resultMap type="com.green.light.vo.EmployeeVo" id="EmployeeVo">
	<result property="id" column="ID"/>
	<result property="name" column="NAME"/>
	<result property="email" column="EMAIL"/>
	<result property="phone" column="PHONE"/>
	<result property="birthday" column="BIRTHDAY"/>
	<result property="gender" column="GENDER"/>
	<result property="address" column="ADDRESS"/>
	<result property="spot" column="SPOT"/>
	<result property="deptno" column="DEPTNO"/>
	<result property="position" column="POSITION"/>
	<result property="estatus" column="ESTATUS"/>
	<result property="join_day" column="JOIN_DAY"/>
	<result property="exit_day" column="EXIT_DAY"/>
	<result property="etype" column="ETYPE"/>
	<result property="leave" column="LEAVE"/>
	<result property="auth" column="AUTH"/>
	<result property="profile" column="PROFILE"/>
</resultMap>

<!-- 부서 전체 조회	getAllDept -->
<select id="getAllDept" resultMap="DepartmentVo">
	SELECT d.DEPTNO , d.DNAME, d.DEPT_MGR, d.HEADNO, h.HNAME, d.DELFLAG
        FROM DEPARTMENT d JOIN HEADQUARTERS h
        ON d.HEADNO = h.HEADNO
        ORDER BY DNAME ASC
</select>
<!-- 부서 상세 조회	getOneDept -->
<select id="getOneDept" parameterType="java.lang.String" resultMap="DepartmentVo">
	SELECT ID, NAME, d.DEPTNO, DNAME, c2.CODE_NAME AS SPOT, d.DEPT_MGR,
           CASE WHEN "POSITION" IS NULL THEN '부서원' 
            	ELSE (SELECT CODE_NAME 
                      	FROM COMMON c 
						WHERE "TYPE" = '직책' AND CODE = "POSITION") END AS POSITION 
        FROM EMPLOYEE e JOIN DEPARTMENT d 
        ON e.DEPTNO = d.DEPTNO JOIN COMMON c2
        ON e.SPOT = c2.CODE AND c2."TYPE" ='직위' 
        AND e.DEPTNO = #{deptno}
        AND ESTATUS = 'Y'
        ORDER BY c2.CODE DESC
</select>
<!-- 부서 상세 정보 조회	getOneDeptInfo -->
<select id="getOneDeptInfo" parameterType="java.lang.String" resultType="DeptVo">
	SELECT DEPTNO, DNAME, DEPT_MGR, HEADNO, DELFLAG
		FROM DEPARTMENT d
		WHERE DEPTNO = #{deptno}
</select>
<!-- 본부별 부서 조회	getDeptByHead -->
<select id="getDeptByHead" parameterType="java.lang.String" resultType="DeptVo">
	SELECT d.DEPTNO , DNAME, HEADNO, DEPT_MGR
        FROM DEPARTMENT d
        WHERE HEADNO = #{headno}
        AND d.DELFLAG = 'N'
</select>
<!-- 부서명 수정	updateDeptName -->
<update id="updateDeptName" parameterType="java.util.Map">
	UPDATE DEPARTMENT SET DNAME = #{dname}
        WHERE DEPTNO = #{deptno}
</update>
<!-- 부서 등록	insertDept -->
<insert id="insertDept" parameterType="java.util.Map">
	INSERT INTO DEPARTMENT d (DEPTNO, DNAME,HEADNO)
        VALUES (LPAD((SELECT MAX(DEPTNO)+1 FROM DEPARTMENT d),2,'0'), #{dname}, #{headno})
</insert>
<!-- 부서 삭제	updateDeptDelete -->
<update id="updateDeptDelete" parameterType="java.lang.String">
	<![CDATA[
		UPDATE DEPARTMENT SET DELFLAG ='Y'
	        WHERE (SELECT COUNT(*)
			        FROM EMPLOYEE e 
			        WHERE DEPTNO = #{deptno}) < 1 AND DEPTNO = #{deptno}
	]]>
</update>
<!-- 부서 완전 삭제	deleteDept -->
<delete id="deleteDept" parameterType="java.lang.String">
	<![CDATA[
		DELETE FROM DEPARTMENT d 
	        WHERE (SELECT COUNT(*)
			        FROM EMPLOYEE e 
			        WHERE DEPTNO = #{deptno}) < 1 AND DEPTNO = #{deptno}
	]]>
</delete>
<!-- 부서 복구	restoreDept -->
<update id="restoreDept" parameterType="java.lang.String">
	UPDATE DEPARTMENT SET DELFLAG ='N'
        WHERE DEPTNO = #{deptno}
</update>
<!-- 퇴사한 직원의 직책 지우기    deleteDeptMgr -->
<update id="deleteDeptMgr" parameterType="java.lang.String">
	UPDATE DEPARTMENT SET DEPT_MGR = ''
        WHERE DEPT_MGR = #{id}
        AND (SELECT "POSITION" 
                        FROM EMPLOYEE e
                        WHERE "POSITION" = '01'
                        AND ID = #{id} AND ESTATUS = 'N') IS NOT NULL
</update>
<!-- 직원 직책 수거 및 부여	updateDeptPosition -->
<update id="updateDeptPosition" parameterType="java.util.Map">
	UPDATE EMPLOYEE 
        SET "POSITION"= CASE WHEN ID = #{id} THEN '01' 
                             WHEN ID = (SELECT DEPT_MGR 
                                        	FROM DEPARTMENT d
                                            WHERE DEPTNO = #{deptno}) THEN NULL 
                                                 ELSE "POSITION" END
        WHERE ID IN (#{id},(SELECT DEPT_MGR 
                            	FROM DEPARTMENT d
                                WHERE DEPTNO = #{deptno}))
</update>
<!-- 부서장 등록 및 변경	updateDeptMgr -->
<update id="updateDeptMgr" parameterType="java.util.Map">
	UPDATE DEPARTMENT SET DEPT_MGR = #{id}
        WHERE DEPTNO = #{deptno}
</update>
<!-- 직원 검색	getEmployeeBySearch -->
<select id="getEmployeeBySearch" parameterType="java.util.Map" resultMap="DepartmentVo">
	SELECT ID, NAME, EMAIL, PHONE, BIRTHDAY, GENDER, DNAME, ESTATUS,
        ADDRESS, e.DEPTNO, (SELECT c.CODE_NAME
	            FROM COMMON c
	            WHERE e.SPOT = c.CODE
	            AND c."TYPE" = '직위') AS SPOT,
	        (SELECT c.CODE_NAME
	            FROM COMMON c
	            WHERE e."POSITION" = c.CODE
	            AND c."TYPE" = '직책') AS "POSITION",
	    ESTATUS, JOIN_DAY, EXIT_DAY, ETYPE,
        LEAVE, AUTH, PROFILE
        FROM EMPLOYEE e JOIN DEPARTMENT d 
        ON e.DEPTNO = d.DEPTNO
        <choose>
        	<when test="opt.equals('name')">
        		 WHERE NAME LIKE '%'||#{keyword}||'%'
        	</when>
        	<when test="opt.equals('dept')">
        		 WHERE DNAME LIKE '%'||#{keyword}||'%'
        	</when>
        </choose>
        AND ID != 'admin'
        ORDER BY NAME
</select>
<!-- 자동결재선 부서별 부서장 조회 selectDeptMgrByDept -->
<select id="selectDeptMgrByDept" resultMap="DepartmentVo">
	SELECT E.ID, E.NAME, C.CODE_NAME
		FROM EMPLOYEE E
		JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO AND E."POSITION" = '01'
		JOIN COMMON C ON C.CODE = E.SPOT AND C."TYPE" = '직위'
		WHERE D.DEPTNO = #{deptno}
</select>
<!-- 자동결재선 기안자의 부서장 조회 selectDrafterDeptMgr -->
<select id="selectDrafterDeptMgr" resultMap="DepartmentVo">
	SELECT E2.ID, E2.NAME, C.CODE_NAME
		FROM EMPLOYEE E
		JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO 
		JOIN EMPLOYEE E2 ON D.DEPT_MGR = E2.ID 
		JOIN COMMON C ON C.CODE = E2.SPOT AND C."TYPE" = '직위'
		WHERE E.ID = #{id}
</select>
</mapper>
